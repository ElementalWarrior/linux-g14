From 90682ad69b16996c156439a80d5e095c99c55c51 Mon Sep 17 00:00:00 2001
From: Scott B <arglebargle@arglebargle.dev>
Date: Wed, 23 Feb 2022 09:27:11 -0800
Subject: [PATCH] v5.16.11 s0ix patch 2022-02-23

Squashed commit of the following:

commit c763db38d7a8d5ecc7db0d2a2227027b6c0a06e5
Author: Scott B <arglebargle@arglebargle.dev>
Date:   Tue Feb 22 16:29:57 2022 -0800

    Revert "ACPI: PM: Revert "Only mark EC GPE for wakeup on Intel systems""

    This reverts commit e68e9863e1c0fe82f14c8ec32ff5d8d8a94dccb4.

commit ea0ac4513e9be512b01ee9e6da87bb3fb05c3313
Author: Sanket Goswami <Sanket.Goswami@amd.com>
Date:   Tue Nov 30 16:53:18 2021 +0530

    platform/x86: amd-pmc: Add support for AMD Smart Trace Buffer (v6)

    STB (Smart Trace Buffer), is a debug trace buffer that isolates the
    failures by analyzing the last running feature of a system. This
    non-intrusive way always runs in the background and stores the trace
    into the SoC.

    This patch enables the STB feature by passing module param
    "enable_stb=1" while loading the driver and provides mechanism to
    access the STB buffer using the read and write routines.

    Co-developed-by: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
    Signed-off-by: Shyam Sundar S K <Shyam-sundar.S-k@amd.com>
    Signed-off-by: Sanket Goswami <Sanket.Goswami@amd.com>

commit 1b06ca0dcd296eaa16fd11e2d1c49878145f084e
Author: Sanket Goswami <Sanket.Goswami@amd.com>
Date:   Tue Nov 30 16:53:17 2021 +0530

    platform/x86: amd-pmc: Simplify error handling and store the pci_dev in amd_pmc_dev structure

    Handle error-exits in the amd_pmc_probe() to avoid duplication and store
    the root port information in amd_pmc_probe() so that the information
    can be used across multiple routines.

    Suggested-by: Hans de Goede <hdegoede@redhat.com>
    Signed-off-by: Sanket Goswami <Sanket.Goswami@amd.com>

commit cc82e9d4d5647db09e305ea5495f3dabe987df68
Author: Lijo Lazar <lijo.lazar@amd.com>
Date:   Thu Nov 25 19:45:42 2021 +0800

    drm/amd/pm: Add warning for unexpected PG requests

    v1: Ideally power gate/ungate requests shouldn't come when smu block is
    uninitialized. Add a WARN message to check the origins if such a thing
    ever happens.

    v2: Use dev_WARN to log device info (Felix/Guchun).

    Signed-off-by: Lijo Lazar <lijo.lazar@amd.com>
    Reviewed-by: Guchun Chen <guchun.chen@amd.com>
    Reviewed-by: Kevin Yang <kevinyang.wang@amd.com>
    Signed-off-by: Alex Deucher <alexander.deucher@amd.com>
---
 drivers/acpi/x86/s2idle.c                 |  12 +-
 drivers/gpu/drm/amd/pm/swsmu/amdgpu_smu.c |   6 +-
 drivers/platform/x86/amd-pmc.c            | 172 ++++++++++++++++++++--
 3 files changed, 170 insertions(+), 20 deletions(-)

diff --git a/drivers/acpi/x86/s2idle.c b/drivers/acpi/x86/s2idle.c
index e0185e841b2a..1c48358b43ba 100644
--- a/drivers/acpi/x86/s2idle.c
+++ b/drivers/acpi/x86/s2idle.c
@@ -424,11 +424,15 @@ static int lps0_device_attach(struct acpi_device *adev,
 		mem_sleep_current = PM_SUSPEND_TO_IDLE;
 
 	/*
-	 * Some LPS0 systems, like ASUS Zenbook UX430UNR/i7-8550U, require the
-	 * EC GPE to be enabled while suspended for certain wakeup devices to
-	 * work, so mark it as wakeup-capable.
+	 * Some Intel based LPS0 systems, like ASUS Zenbook UX430UNR/i7-8550U don't
+	 * use intel-hid or intel-vbtn but require the EC GPE to be enabled while
+	 * suspended for certain wakeup devices to work, so mark it as wakeup-capable.
+	 *
+	 * Only enable on !AMD as enabling this universally causes problems for a number
+	 * of AMD based systems.
 	 */
-	acpi_ec_mark_gpe_for_wake();
+	if (!acpi_s2idle_vendor_amd())
+		acpi_ec_mark_gpe_for_wake();
 
 	return 0;
 }
